<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!-- Packaging -->
    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>
    <modules>
        <module>smdb2-app</module>
        <module>smdb2-testing</module>
    </modules>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.6.1</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <!-- Versioning -->
    <groupId>gr.sae</groupId>
    <artifactId>smdb2</artifactId>
    <version>2022.1.0</version>

    <!-- Meta-data -->
    <name>[${project.artifactId}]</name>
    <description>An online database of information related to films, television programs - including cast, production
        crew, plot summaries, genre, ratings, among others. This project is based on pfseven-smdb2 and uses the
        Microservices architecture.</description>
    <inceptionYear>2022</inceptionYear>

    <!-- Properties/Variables -->
    <properties>
        <!-- Desired Maven version -->
        <maven.version>3.6</maven.version>
        <!-- Build JDK -->
        <java.version>11</java.version>

        <!-- Maven source encoding -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Spring Cloud active version -->
        <spring-cloud.version>2021.0.0</spring-cloud.version>

        <!-- Library versions-->
        <mapstruct.version>1.4.2.Final</mapstruct.version>

        <!--
            Bump version due to https://spring.io/blog/2021/12/10/log4j2-vulnerability-and-spring-boot
            https://unit42.paloaltonetworks.com/apache-log4j-vulnerability-cve-2021-44228/
        -->
        <log4j2.version>2.17.1</log4j2.version>
        <disruptor-maven-plugin.version>3.4.4</disruptor-maven-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <!--
            Asynchronous Logging @see https://logging.apache.org/log4j/2.x/manual/async.html
            Hint:
            Don't forget to set system property
            -Dlog4j2.contextSelector=org.apache.logging.log4j.core.async.AsyncLoggerContextSelector
             to make all loggers asynchronous
            -->
            <dependency>
                <groupId>com.lmax</groupId>
                <artifactId>disruptor</artifactId>
                <version>${disruptor-maven-plugin.version}</version>
            </dependency>

            <!-- Spring Cloud specific -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- Dependencies -->
    <dependencies>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <!-- You can easily generate your own configuration metadata file from items annotated with
        @ConfigurationProperties by using the spring-boot-configuration-processor jar. The jar includes a Java
        annotation processor which is invoked as your project is compiled. -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- you need to exclude spring-boot-starter-logging dependency as Logback is the default implementation -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>com.lmax</groupId>
            <artifactId>disruptor</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <!-- Build settings -->
    <build>
        <!-- Plugin management and corresponding configuration used by all modules -->
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>3.0.0</version>
                    <executions>
                        <execution>
                            <id>enforce-versions</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <requireJavaVersion>
                                        <version>${java.version}</version>
                                    </requireJavaVersion>
                                    <requireMavenVersion>
                                        <version>${maven.version}</version>
                                    </requireMavenVersion>
                                </rules>
                            </configuration>
                        </execution>
                        <execution>
                            <id>ban-bad-log4j-versions</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <bannedDependencies>
                                        <excludes>
                                            <exclude>org.apache.logging.log4j:log4j-core:(,2.17.0)</exclude>
                                        </excludes>
                                    </bannedDependencies>
                                </rules>
                                <fail>true</fail>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.1</version>
                    <configuration>

                        <!--
                        In order to compile your project for Java 11, add the release configuration to the compiler
                        plugin, a new compiler parameter to replace the source and target version parameters
                        -->
                        <release>${java.version}</release>
                        <forceJavacCompilerUse>true</forceJavacCompilerUse>
                        <optimize>true</optimize>
                        <fork>true</fork>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                            <path>
                                <groupId>org.mapstruct</groupId>
                                <artifactId>mapstruct-processor</artifactId>
                                <version>${mapstruct.version}</version>
                            </path>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok-mapstruct-binding</artifactId>
                                <version>0.2.0</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.2.0</version>
                    <configuration>
                        <archive>
                            <addMavenDescriptor>true</addMavenDescriptor>
                            <index>true</index>
                            <manifest>
                                <addClasspath>false</addClasspath>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                            <manifestEntries>
                                <Copyright>(c)Code.Hub 2021</Copyright>
                                <Specification-Title>${project.name}</Specification-Title>
                                <Specification-Version>${project.version}</Specification-Version>
                                <Specification-Vendor>Code.Learn by Code.Hub</Specification-Vendor>
                                <Implementation-Title>${project.groupId}.${project.artifactId}</Implementation-Title>
                                <Implementation-Vendor>Code.Learn by Code.Hub</Implementation-Vendor>
                                <!--<Implementation-Version>${git.revision}</Implementation-Version>-->
                                <!--<X-Git-Branch>${git.branch}</X-Git-Branch>-->
                                <!--<X-Git-Tag>${git.tag}</X-Git-Tag>-->
                                <!--<X-Git-Commits-Count>${git.commitsCount}</X-Git-Commits-Count>-->
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>
                <!-- maven-jgit-buildnumber-plugin -->
                <!--<plugin>-->
                <!--	<groupId>ru.concerteza.buildnumber</groupId>-->
                <!--	<artifactId>maven-jgit-buildnumber-plugin</artifactId>-->
                <!--	<version>1.2.10</version>-->
                <!--	<executions>-->
                <!--		<execution>-->
                <!--			<id>git-buildnumber</id>-->
                <!--			<goals>-->
                <!--				<goal>extract-buildnumber</goal>-->
                <!--			</goals>-->
                <!--			<phase>prepare-package</phase>-->
                <!--		</execution>-->
                <!--	</executions>-->
                <!--</plugin>-->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <configuration>
                        <excludes>
                            <exclude>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                            </exclude>
                        </excludes>
                    </configuration>
                </plugin>
                <!--
                 - Scans a project's dependencies and produces a report of those dependencies which have newer
                 - versions available:
                 - mvn versions:display-dependency-updates
                 -
                 - Scans a project and produces a report of those properties which are used to control artifact
                 - versions and which properties have newer versions available:
                 - mvn versions:display-property-updates
                 -
                 - Scans a project's plugins and produces a report of those plugins which have newer versions
                 - available, taking care of Maven version prerequisites:
                 - mvn versions:display-plugin-updates
                 -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>2.8.1</version>
                    <configuration>
                        <generateBackupPoms>false</generateBackupPoms>
                        <!-- In case we want to exclude a library from check -->
                        <!--
                        <excludes>
                            <exclude>org.apache.commons:commons-collections4</exclude>
                        </excludes>
                        -->
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <!-- Plugins -->
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
            </plugin>

            <!-- DevOps plugins -->
            <!--<plugin>-->
            <!--	<groupId>ru.concerteza.buildnumber</groupId>-->
            <!--	<artifactId>maven-jgit-buildnumber-plugin</artifactId>-->
            <!--</plugin>-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
            </plugin>
        </plugins>

        <!-- Resources -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.yml</include>
                    <include>**/*.xml</include>
                    <include>**/*.csv</include>
                    <include>**/*.sql</include>
                    <include>**/*.ftl</include>
                    <include>**/*.pem</include>
                    <include>**/*.txt</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>

        <defaultGoal>package</defaultGoal>
        <directory>${basedir}/target</directory>
        <finalName>${project.artifactId}-${project.version}</finalName>
    </build>
</project>